{
    "components": {
        "schemas": {
            "UnitCardLimitsResponse": {
                "title": "Unit Card Limits Response",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["limits"],
                                "default": "limits"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "limits": {
                                        "$ref": "../types.json#/components/schemas/CardLevelLimits"
                                    },
                                    "dailyTotals": {
                                        "$ref": "../types.json#/components/schemas/CardTotals"
                                    },
                                    "monthlyTotals": {
                                        "$ref": "../types.json#/components/schemas/CardTotals"
                                    }
                                },
                                "required": ["dailyTotals", "monthlyTotals"],
                                "additionalProperties": false
                            }
                        },
                        "additionalProperties": false,
                        "required": ["type", "attributes"]
                    }
                },
                "additionalProperties": false,
                "required": ["data"]
            },
            "UnitPinStatusResponse": {
                "title": "Unit Pin Status Response",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["pinStatus"],
                                "default": "pinStatus"
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": ["Set", "NotSet"],
                                        "description": "Card PIN status, either 'Set' or 'NotSet'"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "UnitCardResponse": {
                "type": "object",
                "title": "Unit Card Response",
                "properties": {
                    "data": {
                        "$ref": "./card.json#/components/schemas/Card"
                    }
                }
            },
            "UnitCardResponseWithIncluded": {
                "type": "object",
                "title": "Unit Card Response",
                "properties": {
                    "data": {
                        "$ref": "./card.json#/components/schemas/Card"
                    },
                    "included": {
                        "type": "array",
                        "items": {
                            "$ref": "../types.json#/components/schemas/IncludedResource"
                        }
                    }
                }
            },
            "UnitCardsListReponse": {
                "title": "Unit Cards List Reponse",
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "./card.json#/components/schemas/Card"
                        }
                    },
                    "included": {
                        "type": "array",
                        "items": {
                            "$ref": "../types.json#/components/schemas/IncludedResource"
                        }
                    }
                }
            },
            "UnitMobileWalletPayloadResponse": {
                "title": "Unit Mobile Wallet Payload Response",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "./mobileWalletPayload.json#/components/schemas/MobileWalletPayload"
                    }
                },
                "additionalProperties": false,
                "required": ["data"]
            },
            "UnitCardholderBearerTokenResponse": {
                "title": "Unit Cardholder Bearer Token Response",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "./cardholderToken.json#/components/schemas/CardholderBearerToken"
                    }
                },
                "additionalProperties": false,
                "required": ["data"]
            },
            "UnitCardholderTokenVerificationResponse": {
                "title": "Unit Cardholder Token Verification Response",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "./cardholderTokenVerification.json#/components/schemas/CardholderTokenVerification"
                    }
                },
                "additionalProperties": false,
                "required": ["data"]
            }
        }
    },
    "cards": {
        "get": {
            "tags": ["unit"],
            "operationId": "getCardsList",
            "summary": "Get List of Cards",
            "description": "Get List of Cards from API ",
            "parameters": [
                {
                    "$ref": "../types.json#/components/schemas/PageQuery"
                },
                {
                    "name": "filter",
                    "style": "deepObject",
                    "allowReserved": true,
                    "in": "query",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Inactive",
                                        "Active",
                                        "Stolen",
                                        "Lost",
                                        "Frozen",
                                        "ClosedByCustomer",
                                        "SuspectedFraud"
                                    ]
                                }
                            },
                            "accountId": {
                                "type": "string"
                            },
                            "customerId": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                {
                    "name": "include",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardsListReponse"
                            }
                        }
                    }
                }
            }
        },
        "post": {
            "tags": ["unit"],
            "operationId": "createCard",
            "summary": "Create a Card",
            "description": "Create a Card via API ",
            "requestBody": {
                "description": "Create Card Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./createCard.json#/components/schemas/CreateCardRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "card": {
        "get": {
            "tags": ["unit"],
            "operationId": "getCard",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to get"
                },
                {
                    "name": "included",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "summary": "Get Card by Id",
            "description": "Get a Card from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponseWithIncluded"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["unit"],
            "operationId": "updateCard",
            "summary": "Update Card",
            "description": "Update a Card via API ",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to update"
                }
            ],
            "requestBody": {
                "description": "Update Card Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./updateCard.json#/components/schemas/UpdateCardRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "activateCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "activateCard",
            "summary": "Activate Card",
            "description": "Cards can be activated using this endpoint or by calling the toll-free number printed on the card. Virtual cards do not require activation.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to activate"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "setPIN": {
        "post": {
            "tags": ["unit"],
            "operationId": "setCardPIN",
            "summary": "Set Card PIN",
            "description": "Set the PIN for a card. The PIN is set via a third-party service and requires a customer token.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to set PIN for"
                }
            ],
            "requestBody": {
                "description": "Set Card PIN Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./setCardPin.json#/components/schemas/SetCardPinRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "changePIN": {
        "post": {
            "tags": ["unit"],
            "operationId": "changeCardPIN",
            "summary": "Change Card PIN",
            "description": "Change the PIN for a card. The PIN is changed via a third-party service and requires a customer token.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to change PIN for"
                }
            ],
            "requestBody": {
                "description": "Change Card PIN Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./changeCardPin.json#/components/schemas/ChangeCardPinRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "reportLostCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "reportCardAsLost",
            "summary": "Report lost as stolen",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card"
                }
            ],
            "description": "Report card as lost. A lost card cannot be reopened.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "reportStolenCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "reportCardAsStolen",
            "summary": "Report card as stolen",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card"
                }
            ],
            "description": "Report card as stolen. A stolen card cannot be reopened.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "closeCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "closeCard",
            "summary": "Close a Card",
            "description": "Close a Card. A closed card cannot be reopened.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to close"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "cardPinStatus": {
        "get": {
            "tags": ["unit"],
            "operationId": "getCardPinStatus",
            "summary": "Get Card PIN Status",
            "description": "Get the status of a card's PIN, whether it has been set or not.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to get PIN status"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPinStatusResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "freezeCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "freezeCard",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to freeze"
                }
            ],
            "summary": "Freeze a Card",
            "description": "Freeze a Card via API",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "unfreezeCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "unfreezeCard",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to unfreeze"
                }
            ],
            "summary": "Unfreeze a Card",
            "description": "Unfreeze a Card via API",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "cardLimits": {
        "get": {
            "tags": ["unit"],
            "operationId": "getCardLimits",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to get"
                }
            ],
            "summary": "Get Card Limit by Id",
            "description": "Card purchases and withdrawals can be subjected to daily and monthly amount limits. Limits are optional (by default there are no card-specific limits), and can be set when the card is created or updated. The limits are enforced by Unit, and once the limit is reached, the transaction will be rejected.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardLimitsResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "replaceCard": {
        "post": {
            "tags": ["unit"],
            "operationId": "replaceCard",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to replace"
                }
            ],
            "summary": "Replace a Card",
            "description": "Replace a Card via API",
            "requestBody": {
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./replaceCard.json#/components/schemas/ReplaceCardRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "mobileWalletPayload": {
        "post": {
            "tags": ["unit"],
            "operationId": "getMobileWalletPayload",
            "summary": "Get mobile wallet payload",
            "description": "Get the mobile wallet encrypted payload for the specified card. The encrypted payload is unique per issuance and is required as part of the SDK integration.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to get mobile wallet payload for"
                }
            ],
            "requestBody": {
                "description": "Mobile Wallet Payload Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./mobileWalletPayload.json#/components/schemas/GetMobileWalletPayloadRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitMobileWalletPayloadResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "cardholderToken": {
        "post": {
            "tags": ["unit"],
            "operationId": "createCardholderToken",
            "summary": "Create Cardholder Token",
            "description": "Create a bearer token for a specific card. A Cardholder Token can only interact with one card.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to create a token for"
                }
            ],
            "requestBody": {
                "description": "Create Cardholder Token Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./createCardholderToken.json#/components/schemas/CreateCardholderTokenRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardholderBearerTokenResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "cardholderTokenVerification": {
        "post": {
            "tags": ["unit"],
            "operationId": "createCardholderTokenVerification",
            "summary": "Create Cardholder Token Verification",
            "description": "When creating a cardholder token that contains a scope which requires two-factor authentication (see Scopes), it is required to first create a verification challenge that will be sent to the customer. The challenge is a six digit code and is valid for 10 minutes after its creation.",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "cardId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the card to create token verification for"
                }
            ],
            "requestBody": {
                "description": "Create Cardholder Token Verification Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./createCardholderTokenVerification.json#/components/schemas/CreateCardholderTokenVerificationRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCardholderTokenVerificationResponse"
                            }
                        }
                    }
                }
            }
        }
    }
}
