{
    "components": {
        "schemas": {
        "customerRelationships": {
            "type": "object",
            "title": "customerRelationships",
            "properties": {
                "org": {
                    "$ref": "types.json#/definitions/orgRelationship"
                },
                "application": {
                    "$ref": "types.json#/definitions/Relationship"
                }
            },
            "additionalProperties": false
        },
        "IndividualCustomer": {
            "title": "IndividualCustomer",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/components/schemas/Customer"
                },
                {
                    "type": "object",
                    "properties": {
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "fullName": {
                                    "$ref": "types.json#/definitions/fullName"
                                },
                                "email": {
                                    "$ref": "types.json#/definitions/email"
                                },
                                "phone": {
                                    "$ref": "types.json#/definitions/phone"
                                },
                                "ssn": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                },
                                "passport": {
                                    "type": "string"
                                },
                                "nationality": {
                                    "$ref": "types.json#/definitions/country"
                                },
                                "matriculaConsular": {
                                    "type": "string"
                                },
                                "address": {
                                    "$ref": "types.json#/definitions/address"
                                },
                                "dateOfBirth": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "ein": {
                                    "type": "string"
                                },
                                "dba": {
                                    "type": "string"
                                },
                                "soleProprietorship": {
                                    "type": "boolean",
                                    "default": "false"
                                },
                                "tags": {
                                    "$ref": "tags.json#/definitions/tags"
                                },
                                "riskRate": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ]
                                },
                                "maskedSSN": {
                                    "type": "string",
                                    "pattern": "^\\*{5}\\d{4}$"
                                },
                                "maskedPassport": {
                                    "type": "string"
                                },
                                "maskedMatriculaConsular": {
                                    "type": "string"
                                },
                                "authorizedUsers": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "types.json#/definitions/authorizedUser"
                                    }
                                },
                                "jwtSubject": {
                                    "$ref": "types.json#/definitions/jwtSubject"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Active",
                                        "Archived"
                                    ]
                                },
                                "archiveReason": {
                                    "type": "string",
                                    "enum": [
                                        "Inactive",
                                        "FraudACHActivity",
                                        "FraudCardActivity",
                                        "FraudCheckActivity",
                                        "FraudApplicationHistory",
                                        "FraudAccountActivity",
                                        "FraudClientIdentified",
                                        "FraudLinkedToFraudulentCustomer"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "createdAt",
                                "fullName",
                                "status"
                            ]
                        },
                        "relationships": {
                            "$ref": "#/components/schemas/customerRelationships"
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "BusinessCustomer": {
            "title": "BusinessCustomer",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/components/schemas/Customer"
                },
                {
                    "type": "object",
                    "properties": {
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "dba": {
                                    "type": "string"
                                },
                                "ein": {
                                    "type": "string",
                                    "pattern": "^\\d{9}$"
                                },
                                "entityType": {
                                    "type": "string",
                                    "enum": [
                                        "Corporation",
                                        "LLC",
                                        "Partnership"
                                    ]
                                },
                                "dateOfIncorporation": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "stateOfIncorporation": {
                                    "type": "string"
                                },
                                "purpose": {
                                    "type": "string"
                                },
                                "phone": {
                                    "$ref": "types.json#/definitions/phone"
                                },
                                "address": {
                                    "$ref": "types.json#/definitions/address"
                                },
                                "contact": {
                                    "$ref": "types.json#/definitions/contact"
                                },
                                "tags": {
                                    "$ref": "tags.json#/definitions/tags"
                                },
                                "riskRate": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ]
                                },
                                "authorizedUsers": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "types.json#/definitions/authorizedUser"
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Active",
                                        "Archived"
                                    ]
                                },
                                "archiveReason": {
                                    "type": "string",
                                    "enum": [
                                        "Inactive",
                                        "FraudACHActivity",
                                        "FraudCardActivity",
                                        "FraudCheckActivity",
                                        "FraudApplicationHistory",
                                        "FraudAccountActivity",
                                        "FraudClientIdentified",
                                        "FraudLinkedToFraudulentCustomer"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "entityType",
                                "stateOfIncorporation",
                                "contact",
                                "status"
                            ]
                        },
                        "relationships": {
                            "$ref": "#/components/schemas/customerRelationships"
                        }
                    }
                }
            ],
            "additionalProperties": false
        },
        "TrustCustomer": {
            "title": "TrustCustomer",
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/components/schemas/Customer"
                },
                {
                    "type": "object",
                    "properties": {
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "stateOfIncorporation": {
                                    "type": "string"
                                },
                                "contact": {
                                    "$ref": "types.json#/definitions/trustContact"
                                },
                                "tags": {
                                    "$ref": "tags.json#/definitions/tags"
                                },
                                "revocability": {
                                    "$ref": "types.json#/definitions/revocability"
                                },
                                "sourceOfFunds": {
                                    "$ref": "types.json#/definitions/sourceOfFunds"
                                },
                                "taxId": {
                                    "type": "string"
                                },
                                "riskRate": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ]
                                },
                                "authorizedUsers": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "types.json#/definitions/authorizedUser"
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "Active",
                                        "Archived"
                                    ]
                                },
                                "archiveReason": {
                                    "type": "string",
                                    "enum": [
                                        "Inactive",
                                        "FraudACHActivity",
                                        "FraudCardActivity",
                                        "FraudCheckActivity",
                                        "FraudApplicationHistory",
                                        "FraudAccountActivity",
                                        "FraudClientIdentified",
                                        "FraudLinkedToFraudulentCustomer"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "stateOfIncorporation",
                                "contact",
                                "status"
                            ]
                        },
                        "relationships": {
                            "$ref": "#/components/schemas/customerRelationships"
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "Customer": {
            "title": "Customer",
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "types.json#/definitions/identifier"
                },
                "type": {
                    "type": "string"
                }
            },
            "discriminator": {
                "propertyName": "type",
                "mapping": {
                    "individualCustomer": "#/components/schemas/IndividualCustomer",
                    "businessCustomer": "#/components/schemas/BusinessCustomer",
                    "trustCustomer": "#/components/schemas/TrustCustomer"
                }
            }
        },
        "customerLinkage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "customer",
                                "businessCustomer",
                                "individualCustomer"
                            ]
                        },
                        "id": {
                            "$ref": "types.json#/definitions/identifier"
                        }
                    },
                    "required": [
                        "type",
                        "id"
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "data"
            ]
        },
        "UnitCustomerResponse": {
        "type": "object",
        "title": "UnitCustomerResponse",
        "properties": {
            "data": {
                "$ref": "#/components/schemas/Customer"
            }
        }
    }
        }
    },
    "customer": {
        "get": {
            "tags": [
                "Get Customer"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customerId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the customer to get"
                }
            ],
            "summary": "Get Customer by Id",
            "description": "Get a Customer from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCustomerResponse"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": [
                "Update Customer"
            ],
            "operationId": "execute",
            "summary": "Update Customer",
            "description": "Update an Customer via API ",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customerId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the customer to update"
                }
            ],
            "requestBody": {
                "description": "Update Customer Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "update_customer.json"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCustomerResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "list_customers": {
        "get": {
            "tags": [
                "Get List Customers"
            ],
            "operationId": "execute",
            "summary": "Get Customers List",
            "description": "Get Customers List from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "type": "object",
                                "title": "UnitCustomersListResponse",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Customer"
                                        }
                                    },
                                    "meta": {
                                        "$ref": "types.json#/definitions/paginationMeta"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "archive_customer": {
        "post": {
            "tags": [
                "Archive Customer"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "customerId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the customer to archive"
                }
            ],
            "requestBody": {
                "description": "Update Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "archiveCustomer"
                                    ]
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "reason": {
                                            "type": "string",
                                            "enum": [
                                                "Inactive",
                                                "FraudACHActivity",
                                                "FraudCardActivity",
                                                "FraudCheckActivity",
                                                "FraudApplicationHistory",
                                                "FraudAccountActivity",
                                                "FraudClientIdentified",
                                                "FraudLinkedToFraudulentCustomer"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "summary": "Archive Customer by Id",
            "description": "Archive a Customer via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitCustomerResponse"
                            }
                        }
                    }
                }
            }
        }
    }
}