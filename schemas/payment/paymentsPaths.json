{
    "components": {
        "schemas": {
            "UnitPaymentResponse": {
                "type": "object",
                "title": "Unit Payment Response",
                "properties": {
                    "data": {
                        "$ref": "./payment.json#/components/schemas/Payment"
                    }
                }
            },
            "UnitReceivedPaymentResponse": {
                "type": "object",
                "title": "Unit Received Payment Response",
                "properties": {
                    "data": {
                        "$ref": "./receivedPayment.json#/components/schemas/ReceivedPayment"
                    }
                }
            },
            "UnitReturnedReceivedAchTransactionResponse": {
                "type": "object",
                "title": "Unit Returned Received ACH Transaction Response",
                "properties": {
                    "data": {
                        "$ref": "../transaction/transaction.json#/components/schemas/ReturnedReceivedAchTransaction"
                    }
                }
            },
            "UnitRecurringPaymentResponse": {
                "type": "object",
                "title": "Unit Recurring Payment Response",
                "properties": {
                    "data": {
                        "$ref": "./recurringPayment.json#/components/schemas/RecurringPayment"
                    }
                }
            },
            "UnitBulkPaymentsResponse": {
                "type": "object",
                "title": "Unit Bulk Payments Response",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "enum": ["bulkPayments"]
                            },
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "bulkId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "getAndCreatePayments": {
        "get": {
            "tags": ["unit"],
            "operationId": "getPaymentsList",

            "summary": "List Payments",
            "description": "List payments resources. Filtering, paging and sorting can be applied.",
            "parameters": [
                {
                    "$ref": "../types.json#/components/schemas/PageQuery"
                },
                {
                    "name": "filter",
                    "in": "query",
                    "style": "deepObject",
                    "allowReserved": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "description": "Optional. Filters the results by the specified account id."
                            },
                            "customerId": {
                                "type": "string",
                                "description": "Optional. Filters the results by the specified customer id."
                            },
                            "counterpartyAccountId": {
                                "type": "string",
                                "description": "Optional. Filters the Payments by the account id of the specified counterparty."
                            },
                            "status": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Rejected",
                                        "Pending",
                                        "Canceled",
                                        "PendingReview",
                                        "Clearing",
                                        "Sent",
                                        "Returned"
                                    ]
                                },
                                "description": "Optional. Filter Payments by ACH Status. Usage example: filter[status][0]=Pending&filter[status][1]=PendingReview"
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "AchPayment",
                                        "BookPayment",
                                        "WirePayment"
                                    ]
                                },
                                "description": "Optional. Filter Payments by Payment type. such as (AchPayment, BookPayment or WirePayment). Usage example: filter[type][0]=AchPayment&filter[type][1]=WirePayment"
                            },
                            "direction": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": ["Debit", "Credit"]
                                },
                                "description": "Optional. Filter Payments by direction (Debit, Credit). Usage example: filter[direction][0]=Debit"
                            },
                            "since": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Optional. Filters the Payments that occurred after the specified date. e.g. 2020-01-13T16:01:19.346Z"
                            },
                            "until": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Optional. Filters the Payments that occurred before the specified date. e.g. 2020-01-02T20:06:23.486Z"
                            },
                            "fromAmount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Optional. Filters the Payments that have an amount that is higher or equal to the specified amount (in cents). e.g. 5000"
                            },
                            "toAmount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Optional. Filters the Payments that have an amount that is lower or equal to the specified amount (in cents). e.g. 7000"
                            },
                            "recurringPaymentId": {
                                "type": "string",
                                "description": "Optional. Filters the results by the specified recurring payment id."
                            },
                            "feature": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": ["SameDay", "RecurringPayment"]
                                },
                                "description": "Optional. Filter Payments by Payment feature (SameDay, RecurringPayment). Usage example: filter[feature][0]=SameDay"
                            },
                            "tags": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Optional. Filter Payments by Tags."
                            }
                        }
                    }
                },
                {
                    "name": "include",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Optional. A comma-separated list of related resources to include in the response. Related resources include: customer, account, transaction. See Getting Related Resources at https://www.unit.co/docs/api/about-jsonapi/#intro-getting-related-resources"
                },
                {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Optional. Leave empty or provide sort=createdAt for ascending order. Provide sort=-createdAt (leading minus sign) for descending order."
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "title": "Unit Payments List Response",
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "./payment.json#/components/schemas/Payment"
                                        }
                                    },
                                    "included": {
                                        "$ref": "../types.json#/components/schemas/IncludedResource"
                                    },
                                    "meta": {
                                        "$ref": "../types.json#/components/schemas/PaginationMeta"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "post": {
            "tags": ["unit"],
            "operationId": "createPayment",

            "summary": "Create a Payment",
            "description": "Create a Payment via API ",
            "requestBody": {
                "description": "Create Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./createPayment.json#/components/schemas/CreatePaymentRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "getAndUpdatePayment": {
        "get": {
            "tags": ["unit"],
            "operationId": "getPayment",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to get"
                },
                {
                    "name": "include",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Optional. A comma-separated list of related resources to include in the response. Related resources include: customer, account, transaction. See Getting Related Resources at https://www.unit.co/docs/api/about-jsonapi/#intro-getting-related-resources"
                }
            ],
            "summary": "Get Payment by Id",
            "description": "Get a payment by id.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "title": "Unit Payment Response With Included",
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "$ref": "./payment.json#/components/schemas/Payment"
                                    },
                                    "included": {
                                        "$ref": "../types.json#/components/schemas/IncludedResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["unit"],
            "operationId": "updatePayment",

            "summary": "Update Payment",
            "description": "Update an Payment via API ",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to update"
                }
            ],
            "requestBody": {
                "description": "Update Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./updatePayment.json#/components/schemas/UpdatePaymentRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "cancelPayment": {
        "post": {
            "tags": ["unit"],
            "operationId": "cancelPayment",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to cancel"
                }
            ],
            "summary": "Cancel a Payment by Id",
            "description": "Cancel a Payment via API ",
            "requestBody": {
                "description": "Pass empty object in order for content-type to be aquired correctly",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "type": "object",
                            "nullable": true
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "listReceivedPayments": {
        "get": {
            "tags": ["unit"],
            "operationId": "getReceivedPaymentsList",

            "parameters": [
                {
                    "$ref": "../types.json#/components/schemas/PageQuery"
                },
                {
                    "name": "filter",
                    "in": "query",
                    "style": "deepObject",
                    "allowReserved": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "description": "Optional. Filters the results by the specified account id."
                            },
                            "customerId": {
                                "type": "string",
                                "description": "Optional. Filters the results by the specified customer id."
                            },
                            "status": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Pending",
                                        "Advanced",
                                        "PendingReview",
                                        "MarkedForReturn",
                                        "Returned",
                                        "Completed"
                                    ]
                                },
                                "description": "Optional. Filter Received Payments by ReceivedPayment Status. Usage example: filter[status][0]=Pending&filter[status][1]=Advanced. Cannot be stated with includeCompleted."
                            },
                            "since": {
                                "type": "string",
                                "format": "date",
                                "description": "Optional. Filters before the specified date. e.g. 2021-06-01"
                            },
                            "until": {
                                "type": "string",
                                "format": "date",
                                "description": "Optional. Filters after the specified date. e.g. 2021-07-01"
                            },
                            "fromAmount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Optional. Filters the Received Payment that have an amount that is higher or equal to the specified amount (in cents). e.g. 5000"
                            },
                            "toAmount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Optional. Filters the Received Payment that have an amount that is lower or equal to the specified amount (in cents). e.g. 7000"
                            },
                            "includeCompleted": {
                                "type": "boolean",
                                "description": "Optional. Filter to include ReceivedPayment with Status 'Completed', default False. Cannot be stated with filter[status][]"
                            },
                            "canBeReprocessed": {
                                "type": "boolean",
                                "description": "Optional. If set to true, returns only Received Payments that can be reprocessed. If set to false only returns Received Payments that can't be reprocessed."
                            },
                            "tags": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Optional. Filter received payments by Tags."
                            }
                        }
                    }
                },
                {
                    "name": "include",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Optional. A comma-separated list of related resources to include in the response. Related resources include: customer, account. See https://www.unit.co/docs/api/about-jsonapi/#intro-getting-related-resources"
                },
                {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Optional. Leave empty or provide sort=createdAt for ascending order. Provide sort=-createdAt (leading minus sign) for descending order."
                }
            ],
            "summary": "List Received Payments",
            "description": "List received payments. Filtering, paging and sorting can be applied.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "type": "object",
                                "title": "Unit Received Payment List Response",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "./receivedPayment.json#/components/schemas/ReceivedPayment"
                                        }
                                    },
                                    "included": {
                                        "$ref": "../types.json#/components/schemas/IncludedResource"
                                    },
                                    "meta": {
                                        "$ref": "../types.json#/components/schemas/PaginationMeta"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "receivedPayments": {
        "get": {
            "tags": ["unit"],
            "operationId": "getReceivedPayment",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to get"
                },
                {
                    "name": "include",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    },
                    "description": "Optional. A comma-separated list of related resources to include in the response. Related resources include: customer, account. See https://www.unit.co/docs/api/about-jsonapi/#intro-getting-related-resources"
                }
            ],
            "summary": "Get Received Payment by Id",
            "description": "Get a received payment by id.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "type": "object",
                                "title": "Unit Received Payment Response With Included",
                                "properties": {
                                    "data": {
                                        "$ref": "./receivedPayment.json#/components/schemas/ReceivedPayment"
                                    },
                                    "included": {
                                        "$ref": "../types.json#/components/schemas/IncludedResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": ["unit"],
            "operationId": "updateReceivedPayment",
            "summary": "Update Received Payment",
            "description": "Update a Received Payment.",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to update"
                }
            ],
            "requestBody": {
                "description": "Update Received Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./updateReceivedPayment.json#/components/schemas/UpdateReceivedPaymentRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "advanceReceivedPayment": {
        "post": {
            "tags": ["unit"],
            "operationId": "advanceReceivedPayment",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to advance"
                }
            ],
            "summary": "Advance Received Payment",
            "description": "Advance a Received Payment. In order to use this API, you must implement the Advance Received Payment capability. Only received payments that are in status `Pending` can be advanced.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "reprocessReceivedPayment": {
        "post": {
            "tags": ["unit"],
            "operationId": "reprocessReceivedPayment",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to reprocess"
                }
            ],
            "summary": "Reprocess Received Payment",
            "description": "Reprocess a Received ACH Debit Payment in case it was `MarkedForReturn` due to `InsufficientFunds`. The reprocess functionality is disabled by default. If you would like to enable it, please contact Unit. Only received payments that are in status `MarkedForReturn` can be reprocessed.",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "returnReceivedAchTransaction": {
        "post": {
            "tags": ["unit"],
            "operationId": "returnReceivedAchTransaction",

            "summary": "Return Received ACH Transaction",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "transactionId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the transaction to return"
                }
            ],
            "requestBody": {
                "description": "Pass empty object in order for content-type to be aquired correctly",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./returnReceivedAchTransaction.json#/components/schemas/ReturnReceivedAchTransactionRequest"
                        }
                    }
                }
            },
            "description": "Return Received ACH Transaction via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReturnedReceivedAchTransactionResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "recurringPayments": {
        "get": {
            "tags": ["unit"],
            "operationId": "getRecurringPaymentsList",

            "summary": "Get Recurring Payments List",
            "description": "Get Recurring Payments List from API ",
            "parameters": [
                {
                    "$ref": "../types.json#/components/schemas/PageQuery"
                },
                {
                    "name": "filter",
                    "in": "query",
                    "style": "deepObject",
                    "allowReserved": true,
                    "schema": {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string"
                            },
                            "customerId": {
                                "type": "string"
                            },
                            "status": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "type": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "recurringCreditAchPayment",
                                        "recurringDebitAchPayment",
                                        "recurringCreditBookPayment"
                                    ]
                                }
                            },
                            "fromStartTime": {
                                "type": "string"
                            },
                            "toStartTime": {
                                "type": "string"
                            },
                            "fromEndTime": {
                                "type": "string"
                            },
                            "toEndTime": {
                                "type": "string"
                            }
                        }
                    }
                },
                {
                    "name": "sort",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "type": "object",
                                "title": "Unit Recurring Payment List Response",
                                "properties": {
                                    "data": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "./recurringPayment.json#/components/schemas/RecurringPayment"
                                        }
                                    },
                                    "meta": {
                                        "$ref": "../types.json#/components/schemas/PaginationMeta"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "post": {
            "tags": ["unit"],
            "operationId": "createRecurringPayment",

            "summary": "Create Recurring Payment",
            "description": "Create a Recurring Payment via API ",
            "requestBody": {
                "description": "Create Recurring Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./createRecurringPayment.json#/components/schemas/CreateRecurringPaymentRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "getRecurringPayment": {
        "get": {
            "tags": ["unit"],
            "operationId": "getRecurringPayment",

            "summary": "Get Recurring Payment",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to get"
                }
            ],
            "description": "Get Recurring Payment from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "disableRecurringPayment": {
        "post": {
            "tags": ["unit"],
            "operationId": "disableRecurringPayment",

            "summary": "Disable Recurring Payment",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to disable"
                }
            ],
            "requestBody": {
                "description": "Pass empty object in order for content-type to be aquired correctly",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "type": "object",
                            "nullable": true
                        }
                    }
                }
            },
            "description": "Disable Recurring Payment via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "enableRecurringPayment": {
        "post": {
            "tags": ["unit"],
            "operationId": "enableRecurringPayment",

            "summary": "Enable Recurring Payment",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to enable"
                }
            ],
            "requestBody": {
                "description": "Pass empty object in order for content-type to be aquired correctly",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "type": "object",
                            "nullable": true
                        }
                    }
                }
            },
            "description": "Enable Recurring Payment via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "createBulkPayments": {
        "post": {
            "tags": ["unit"],
            "operationId": "createBulkPayments",
            "summary": "Create Bulk Payment",
            "description": "Bulk payments can contain multiple payment creation requests from different types (ACH, Book, Wire). It is highly recommended to attach to each payment creation request an idempotency key. This will ensure no creation duplication. Bulk is an asynchronous process. The immediate response will be the bulkId (generated by Unit). Once all payments creations in bulk are finished a bulkPayments.finished webhook event is sent by Unit. If not supplied, Unit will generate idempotency key as 'bulkId indexInBulk' combination.",
            "requestBody": {
                "description": "Create Bulk Payments Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "./createPayments.json#/components/schemas/CreatePaymentsRequest"
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitBulkPaymentsResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "clearAchDebitPayment": {
        "post": {
            "tags": ["unit"],
            "operationId": "clearAchDebitPayment",

            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to clear"
                }
            ],
            "summary": "Clear ACH Debit Payment",
            "description": "Clears an ACH debit payment while in `clearing` status. Overrides the original clearing period, making funds available immediately. Requires the Dynamic Clearing Period feature to be enabled.",
            "requestBody": {
                "description": "Pass empty object in order for content-type to be aquired correctly",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "type": "object",
                            "nullable": true
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    }
}
