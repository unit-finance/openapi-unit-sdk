{
    "components": {
        "schemas": {
            "paymentRelationships": {
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "types.json#/definitions/Relationship"
                    },
                    "counterparty": {
                        "$ref": "types.json#/definitions/Relationship"
                    },
                    "counterpartyAccount": {
                        "$ref": "types.json#/definitions/Relationship"
                    },
                    "transaction": {
                        "type": "object",
                        "title": "transactionRelationship",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "default": "transaction"
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "AchPayment": {
                "title": "ACH Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "Credit",
                                            "Debit"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "addenda": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "counterparty": {
                                        "$ref": "#/components/schemas/counterparty"
                                    },
                                    "tags": {
                                        "$ref": "tags.json#/definitions/tags"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Rejected",
                                            "Clearing",
                                            "Sent",
                                            "Canceled",
                                            "Returned"
                                        ]
                                    },
                                    "settlementDate": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "reason": {
                                        "type": "string"
                                    },
                                    "expectedCompletionDate": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "secCode": {
                                        "type": "string"
                                    },
                                    "traceNumber": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "status",
                                    "description",
                                    "amount",
                                    "direction"
                                ],
                                "additionalProperties": true
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/paymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "id",
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "BookPayment": {
                "title": "Book Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "Credit",
                                            "Debit"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Rejected",
                                            "Clearing",
                                            "Sent",
                                            "Canceled",
                                            "Returned"
                                        ]
                                    },
                                    "settlementDate": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "amount",
                                    "direction",
                                    "description",
                                    "status"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/paymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "id",
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "WirePayment": {
                "title": "Wire Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "Credit"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "counterparty": {
                                        "$ref": "#/components/schemas/wireCounterparty"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Rejected",
                                            "Clearing",
                                            "Sent",
                                            "Canceled",
                                            "Returned"
                                        ]
                                    },
                                    "settlementDate": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "reason": {
                                        "type": "string"
                                    },
                                    "imadOmad": {
                                        "type": "object",
                                        "properties": {
                                            "imad": {
                                                "type": "string"
                                            },
                                            "omad": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "amount",
                                    "direction",
                                    "description",
                                    "status"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/paymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "id",
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "BillPayment": {
                "title": "Bill Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "Credit",
                                            "Debit"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 50
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Initialized",
                                            "Pending",
                                            "Rejected",
                                            "Clearing",
                                            "Sent",
                                            "Canceled",
                                            "Returned"
                                        ]
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "amount",
                                    "direction",
                                    "description",
                                    "status"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/paymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "id",
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "Payment": {
                "title": "Payment Resource",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "types.json#/definitions/identifier"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "achPayment": "#/components/schemas/AchPayment",
                        "bookPayment": "#/components/schemas/BookPayment",
                        "wirePayment": "#/components/schemas/WirePayment",
                        "billPayment": "#/components/schemas/BillPayment"
                    }
                }
            },
            "pushToCardPayment": {
                "title": "Push To Card Payment Response",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Payment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "direction": {
                                        "type": "string",
                                        "enum": [
                                            "Debit",
                                            "Credit"
                                        ]
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Rejected",
                                            "Sent"
                                        ]
                                    },
                                    "reason": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "$ref": "tags.json#/definitions/tags"
                                    },
                                    "astraRoutineId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "amount",
                                    "direction",
                                    "description",
                                    "status"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/paymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "type",
                            "id",
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "counterparty": {
                "title": "Counterparty",
                "type": "object",
                "properties": {
                    "routingNumber": {
                        "type": "string",
                        "pattern": "^\\d{9}$"
                    },
                    "accountNumber": {
                        "type": "string",
                        "pattern": "^\\d{1,17}$"
                    },
                    "accountType": {
                        "type": "string",
                        "enum": [
                            "Checking",
                            "Savings",
                            "Loan"
                        ]
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    }
                },
                "additionalProperties": false,
                "required": [
                    "routingNumber",
                    "accountNumber",
                    "accountType",
                    "name"
                ]
            },
            "wireCounterparty": {
                "title": "WireCounterparty",
                "type": "object",
                "properties": {
                    "routingNumber": {
                        "type": "string",
                        "pattern": "^\\d{9}$"
                    },
                    "accountNumber": {
                        "type": "string",
                        "maxLength": 17
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "address": {
                        "$ref": "types.json#/definitions/address"
                    }
                },
                "additionalProperties": false,
                "required": [
                    "routingNumber",
                    "accountNumber",
                    "address",
                    "name"
                ]
            },
            "astra": {
                "title": "AstraPushToCardConfiguration",
                "type": "object",
                "properties": {
                    "authToken": {
                        "type": "string",
                        "minLength": 1
                    },
                    "debitFeePercent": {
                        "type": "number"
                    },
                    "institutionId": {
                        "type": "string",
                        "minLength": 1
                    },
                    "destinationCardId": {
                        "type": "string",
                        "minLength": 1
                    },
                    "routingNumber": {
                        "type": "string",
                        "minLength": 1
                    },
                    "accountNumber": {
                        "type": "string",
                        "minLength": 1
                    },
                    "accountName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "referenceId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 80
                    }
                },
                "additionalProperties": false,
                "required": [
                    "debitFeePercent",
                    "institutionId",
                    "destinationCardId",
                    "routingNumber",
                    "accountNumber",
                    "referenceId"
                ]
            },
            "receivedPaymentRelationships": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "default": "account"
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    },
                    "customer": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "businessCustomer",
                                            "individualCustomer",
                                            "customer"
                                        ]
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    },
                    "receivePaymentTransaction": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "default": "transaction"
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    },
                    "paymentAdvanceTransaction": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "default": "transaction"
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    },
                    "repayPaymentAdvanceTransaction": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "default": "transaction"
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    }
                },
                "required": [
                    "account",
                    "customer"
                ],
                "additionalProperties": false
            },
            "ReceivedPayment": {
                "title": "Received Payment Resource",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "types.json#/definitions/identifier"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "createdAt": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "Pending",
                                    "Advanced",
                                    "Completed",
                                    "Returned"
                                ]
                            },
                            "amount": {
                                "type": "integer",
                                "minimum": 1
                            },
                            "completionDate": {
                                "type": "string"
                            },
                            "wasAdvanced": {
                                "type": "boolean"
                            },
                            "companyName": {
                                "type": "string"
                            },
                            "counterpartyRoutingNumber": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "addenda": {
                                "type": "string"
                            },
                            "traceNumber": {
                                "type": "string"
                            },
                            "secCode": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 3
                            },
                            "returnReason": {
                                "type": "string"
                            },
                            "tags": {
                                "$ref": "tags.json#/definitions/tags"
                            }
                        },
                        "required": [
                            "createdAt",
                            "amount",
                            "description",
                            "status",
                            "completionDate",
                            "companyName",
                            "counterpartyRoutingNumber",
                            "traceNumber",
                            "secCode"
                        ],
                        "additionalProperties": false
                    },
                    "relationships": {
                        "$ref": "#/components/schemas/receivedPaymentRelationships"
                    }
                },
                "additionalProperties": false
            },
            "recurringPaymentRelationships": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "depositAccount",
                                            "account"
                                        ]
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    },
                    "counterpartyAccount": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "depositAccount",
                                            "account"
                                        ]
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    },
                    "customer": {
                        "type": "object",
                        "properties": {
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "businessCustomer",
                                            "individualCustomer",
                                            "customer"
                                        ]
                                    },
                                    "id": {
                                        "$ref": "types.json#/definitions/identifier"
                                    }
                                },
                                "required": [
                                    "type",
                                    "id"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "data"
                        ],
                        "additionalProperties": false
                    }
                }
            },
            "RecurringCreditAchPayment": {
                "title": "Recurring Credit ACH Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RecurringPayment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "updatedAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 10
                                    },
                                    "addenda": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "tags": {
                                        "$ref": "tags.json#/definitions/tags"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Active",
                                            "Completed",
                                            "Disabled"
                                        ]
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/schedule"
                                    },
                                    "numberOfPayments": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "status",
                                    "description",
                                    "amount",
                                    "schedule",
                                    "numberOfPayments"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/recurringPaymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "RecurringDebitAchPayment": {
                "title": "Recurring Debit ACH Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RecurringPayment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "updatedAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 10
                                    },
                                    "addenda": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "tags": {
                                        "$ref": "tags.json#/definitions/tags"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Active",
                                            "Completed",
                                            "Disabled"
                                        ]
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/schedule"
                                    },
                                    "numberOfPayments": {
                                        "type": "integer"
                                    },
                                    "verifyCounterpartyBalance": {
                                        "type": "boolean",
                                        "default": false
                                    },
                                    "sameDay": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "status",
                                    "description",
                                    "amount",
                                    "schedule",
                                    "numberOfPayments"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/recurringPaymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "RecurringCreditBookPayment": {
                "title": "Recurring Credit Book Payment",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/RecurringPayment"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "attributes": {
                                "type": "object",
                                "properties": {
                                    "createdAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "updatedAt": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 80
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "Pending",
                                            "Active",
                                            "Completed",
                                            "Disabled"
                                        ]
                                    },
                                    "schedule": {
                                        "$ref": "#/components/schemas/schedule"
                                    },
                                    "numberOfPayments": {
                                        "type": "integer"
                                    },
                                    "tags": {
                                        "$ref": "tags.json#/definitions/tags"
                                    }
                                },
                                "required": [
                                    "createdAt",
                                    "updatedAt",
                                    "amount",
                                    "description",
                                    "status",
                                    "schedule",
                                    "numberOfPayments"
                                ],
                                "additionalProperties": false
                            },
                            "relationships": {
                                "$ref": "#/components/schemas/recurringPaymentRelationships"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "attributes",
                            "relationships"
                        ]
                    }
                ]
            },
            "schedule": {
                "title": "Schedule",
                "type": "object",
                "properties": {
                    "startTime": {
                        "type": "string",
                        "format": "date"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date"
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "Monthly"
                        ]
                    },
                    "dayOfMonth": {
                        "type": "integer",
                        "minimum": -5,
                        "maximum": 28
                    },
                    "nextScheduledAction": {
                        "type": "string",
                        "format": "date"
                    },
                    "totalNumberOfPayments": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "additionalProperties": false,
                "required": [
                    "interval",
                    "nextScheduledAction"
                ]
            },
            "RecurringPayment": {
                "title": "Recurring Payment Resource",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "types.json#/definitions/identifier"
                    }
                },
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "recurringCreditAchPayment": "#/components/schemas/RecurringCreditAchPayment",
                        "recurringDebitAchPayment": "#/components/schemas/RecurringDebitAchPayment",
                        "recurringCreditBookPayment": "#/components/schemas/RecurringCreditBookPayment"
                    }
                },
                "additionalProperties": false
            },
            "UnitPaymentResponse": {
                "type": "object",
                "title": "UnitPaymentResponse",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Payment"
                    }
                }
            },
            "UnitPaymentsListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        }
                    }
                }
            },
            "UnitReceivedPaymentResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReceivedPayment"
                        }
                    }
                }
            },
            "UnitReceivedPaymentListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReceivedPayment"
                        }
                    }
                }
            },
            "UnitRecurringPaymentResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/RecurringPayment"
                    }
                }
            },
            "UnitRecurringPaymentListResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RecurringPayment"
                        }
                    }
                }
            }
        }
    },
    "get_and_create_payments": {
        "get": {
            "tags": [
                "Get List Payments"
            ],
            "operationId": "execute",
            "summary": "Get List Payments",
            "description": "Get List Payments from API ",
            "parameters": [
                {
                    "name": "page",
                    "in": "query",
                    "schema": {
                        "$ref": "types.json#/definitions/listPageParametersObject"
                    }
                },
                {
                    "name": "filter",
                    "in": "query",
                    "schema": {
                        "type": "object",
                        "properties": {
                            "query": {
                                "type": "string"
                            },
                            "status": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "Pending",
                                        "Approved"
                                    ]
                                }
                            },
                            "email": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "object"
                            }
                        }
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentsListResponse"
                            }
                        }
                    }
                }
            }
        },
        "post": {
            "tags": [
                "Create a Payment"
            ],
            "operationId": "execute",
            "summary": "Create a Payment",
            "description": "Create a Payment via API ",
            "requestBody": {
                "description": "Create Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                                "type": "object",
                                "properties": {
                                 "data": {
                                    "$ref": "createPayment.json"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "get_and_patch_payment": {
        "get": {
            "tags": [
                "Get Payment"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to get"
                },
                {
                    "name": "included",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "summary": "Get Payment by Id",
            "description": "Get a Payment from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": [
                "Update Payment"
            ],
            "operationId": "execute",
            "summary": "Update Payment",
            "description": "Update an Payment via API ",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to update"
                }
            ],
            "requestBody": {
                "description": "Update Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "types.json#/definitions/updateUnitRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "cancel_payment": {
        "post": {
            "tags": [
                "Cancel Payment"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to cancel"
                }
            ],
            "summary": "Cancel a Payment by Id",
            "description": "Cancel a Payment via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "list_received_payments": {
        "get": {
            "tags": [
                "Get Received Payments List"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "name": "included",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "summary": "Get Received Payments List",
            "description": "Get Received Payments from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "received_payments": {
        "get": {
            "tags": [
                "Get Received Payment"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to get"
                },
                {
                    "name": "included",
                    "in": "query",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "summary": "Get Received Payment by Id",
            "description": "Get a Received Payment from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentListResponse"
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "tags": [
                "Update Received Payment"
            ],
            "operationId": "execute",
            "summary": "Update Received Payment",
            "description": "Update a Received Payment via API ",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to update"
                }
            ],
            "requestBody": {
                "description": "Update Received Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "$ref": "types.json#/definitions/updateUnitRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "advance_received_payment": {
        "post": {
            "tags": [
                "Advance Received Payment"
            ],
            "operationId": "execute",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to advance"
                }
            ],
            "summary": "Advance Received Payment by Id",
            "description": "Advance a Received Payment via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitReceivedPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "recurring_payments": {
        "get": {
            "tags": [
                "Get List Recurring Payments"
            ],
            "operationId": "execute",
            "summary": "Get Recurring Payments List",
            "description": "Get Recurring Payments List from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentListResponse"
                            }
                        }
                    }
                }
            }
        },
        "post": {
            "tags": [
                "Create Recurring Payment"
            ],
            "operationId": "execute",
            "summary": "Create Recurring Payment",
            "description": "Create a Recurring Payment via API ",
            "requestBody": {
                "description": "Create Recurring Payment Request",
                "required": true,
                "content": {
                    "application/vnd.api+json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "$ref": "createRecurringPayment.json"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "get_recurring_payment": {
        "get": {
            "tags": [
                "Get Recurring Payment"
            ],
            "operationId": "execute",
            "summary": "Get Recurring Payment",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to get"
                }
            ],
            "description": "Get Recurring Payment from API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "disable_recurring_payment": {
        "post": {
            "tags": [
                "Disable Recurring Payment"
            ],
            "operationId": "execute",
            "summary": "Disable Recurring Payment",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to disable"
                }
            ],
            "description": "Disable Recurring Payment via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "enable_recurring_payment": {
        "post": {
            "tags": [
                "Enable Recurring Payment"
            ],
            "operationId": "execute",
            "summary": "Enable Recurring Payment",
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "name": "paymentId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the payment to enable"
                }
            ],
            "description": "Enable Recurring Payment via API ",
            "responses": {
                "200": {
                    "description": "Successful Response",
                    "content": {
                        "application/vnd.api+json; charset=utf-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UnitRecurringPaymentResponse"
                            }
                        }
                    }
                }
            }
        }
    }
}