require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenapiClient::ApiToken
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
RSpec.describe 'ApiToken' do
  before do
    configure_tests
  end

  describe 'test an instance of Org ApiToken' do
    let(:api_instance) { OpenapiClient::CreateOrgApiTokenApi.new(OpenapiClient::ApiClient.new(configuration)) }
    it 'should create an instance of ApiToken' do
      request = {data: OpenapiClient::CreateApiToken.new( type: "apiToken", attributes: OpenapiClient::CreateApiTokenAttributes.new(
        {description: "test token", scope: "customers applications",
         expiration: "2023-11-21T13:47:17.000Z", source_ip: "192.11.1.1"})).to_hash}
      response = api_instance.execute("4148", request)
      expect(response.data.type).to eq('apiToken')
    end
  end

  describe 'list api tokens' do
    let(:list_instance) { OpenapiClient::GetListOrgAPITokensApi.new(OpenapiClient::ApiClient.new(configuration)) }

    it 'lists api tokens' do
      opts =  { query_params: {"page[limit]": 10, "page[offset]": 0, "userId": "4148"}}
      response = list_instance.execute(opts)
      expect(response.data[0].type).to eq('apiToken')
    end
  end

  describe 'test an instance of customer token' do
    let(:customer_instance) {OpenapiClient::CreateCustomerTokenApi.new(OpenapiClient::ApiClient.new(configuration)) }
    let(:verification_instance) {OpenapiClient::CreateCustomerTokenVerificationApi.new(OpenapiClient::ApiClient.new(configuration))}
    let(:verification_request) do {data: OpenapiClient::CreateCustomerTokenVerification.new(type: "customerTokenVerification", attributes: OpenapiClient::CreateCustomerTokenVerificationAttributes.new(channel: "sms")).to_hash} end
    let(:verification_token) {verification_instance.execute("768867", verification_request)}
    it 'should create an instance of ApiToken' do
      request = {data: OpenapiClient::CreateCustomerToken.new( type: "customerToken", attributes: OpenapiClient::CreateCustomerTokenAttributes.new(
        {verification_token: verification_token, scope: "customers applications"})).to_hash}
      response = customer_instance.execute("768867", request)
      expect(response.data.type).to eq('customerToken')
    end
  end
end
